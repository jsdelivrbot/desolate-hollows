{"version":3,"sources":["../../src/helpers/routerHelpers.js"],"names":["module","exports","validateParams","schema","name","req","res","next","result","validate","param","error","status","json","value","validateBody","body","schemas","idSchema","object","keys","string","regex","required","userSchema","firstName","lastName","strict","email","userOptionalSchema","carSchema","make","model","year","number"],"mappings":";;AAAA;;;;;;AAEAA,OAAOC,OAAP,GAAiB;AACbC,oBAAgB,wBAACC,MAAD,EAASC,IAAT;AAAA,eAAkB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClD,gBAAMC,SAAS,cAAIC,QAAJ,CAAa,EAAEC,OAAOL,IAAI,QAAJ,EAAcD,IAAd,CAAT,EAAb,EAA6CD,MAA7C,CAAf;AACA,gBAAIK,OAAOG,KAAX,EAAkB;AACd,uBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,OAAOG,KAA5B,CAAP;AACH,aAFD,MAEO;AACH,oBAAG,CAACN,IAAIS,KAAR,EAAeT,IAAIS,KAAJ,GAAY,EAAZ;AACf,oBAAG,CAACT,IAAIS,KAAJ,CAAU,QAAV,CAAJ,EAAyBT,IAAIS,KAAJ,CAAU,QAAV,IAAsB,EAAtB;AACzBT,oBAAIS,KAAJ,CAAU,QAAV,EAAoBV,IAApB,IAA4BI,OAAOM,KAAP,CAAaJ,KAAzC;AACAH;AACH;AACJ,SAVe;AAAA,KADH;;AAabQ,kBAAc,sBAACZ,MAAD;AAAA,eAAY,UAACE,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1C,gBAAMC,SAAS,cAAIC,QAAJ,CAAaJ,IAAIW,IAAjB,EAAuBb,MAAvB,CAAf;AACA,gBAAIK,OAAOG,KAAX,EAAkB;AACd,uBAAOL,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,OAAOG,KAA5B,CAAP;AACH,aAFD,MAEO;AACH,oBAAG,CAACN,IAAIS,KAAR,EAAeT,IAAIS,KAAJ,GAAY,EAAZ;AACf,oBAAG,CAACT,IAAIS,KAAJ,CAAU,MAAV,CAAJ,EAAuBT,IAAIS,KAAJ,CAAU,MAAV,IAAoB,EAApB;AACvBT,oBAAIS,KAAJ,CAAU,MAAV,IAAoBN,OAAOM,KAA3B;AACAP;AACH;AACJ,SAVa;AAAA,KAbD;;AAyBbU,aAAS;AACLC,kBAAU,cAAIC,MAAJ,GAAaC,IAAb,CAAkB;AACxBV,mBAAO,cAAIW,MAAJ,GAAaC,KAAb,CAAmB,mBAAnB,EAAwCC,QAAxC;AADiB,SAAlB,CADL;AAILC,oBAAY,cAAIL,MAAJ,GAAaC,IAAb,CAAkB;AAC1BK,uBAAW,cAAIJ,MAAJ,GAAaE,QAAb,EADe;AAE1BG,sBAAU,cAAIC,MAAJ,GAAaJ,QAAb,EAFgB;AAG1BK,mBAAO,cAAIP,MAAJ,GAAaO,KAAb,GAAqBL,QAArB;AAHmB,SAAlB,CAJP;AASLM,4BAAoB,cAAIV,MAAJ,GAAaC,IAAb,CAAkB;AAClCK,uBAAW,cAAIJ,MAAJ,EADuB;AAElCK,sBAAU,cAAIC,MAAJ,EAFwB;AAGlCC,mBAAO,cAAIP,MAAJ,GAAaO,KAAb;AAH2B,SAAlB,CATf;AAcLE,mBAAW,cAAIX,MAAJ,GAAaC,IAAb,CAAkB;AACzBW,kBAAM,cAAIV,MAAJ,GAAaE,QAAb,EADmB;AAEzBS,mBAAO,cAAIL,MAAJ,GAAaJ,QAAb,EAFkB;AAGzBU,kBAAM,cAAIC,MAAJ,GAAaX,QAAb;AAHmB,SAAlB;AAdN;AAzBI,CAAjB","file":"routerHelpers.js","sourcesContent":["import Joi from 'joi';\n\nmodule.exports = {\n    validateParams: (schema, name) => (req, res, next) => {\n        const result = Joi.validate({ param: req['params'][name] }, schema);\n        if (result.error) {\n            return res.status(400).json(result.error)\n        } else {\n            if(!req.value) req.value = {};\n            if(!req.value['params']) req.value['params'] = {};\n            req.value['params'][name] = result.value.param;\n            next();\n        }\n    },\n\n    validateBody: (schema) => (req, res, next) => {\n        const result = Joi.validate(req.body, schema);\n        if (result.error) {\n            return res.status(400).json(result.error)\n        } else {\n            if(!req.value) req.value = {};\n            if(!req.value['body']) req.value['body'] = {};\n            req.value['body'] = result.value;\n            next();\n        }\n    },\n\n    schemas: {\n        idSchema: Joi.object().keys({\n            param: Joi.string().regex(/^[0-9a-fA-F]{24}$/).required(),\n        }),\n        userSchema: Joi.object().keys({\n            firstName: Joi.string().required(),\n            lastName: Joi.strict().required(),\n            email: Joi.string().email().required(),\n        }),\n        userOptionalSchema: Joi.object().keys({\n            firstName: Joi.string(),\n            lastName: Joi.strict(),\n            email: Joi.string().email(),\n        }),\n        carSchema: Joi.object().keys({\n            make: Joi.string().required(),\n            model: Joi.strict().required(),\n            year: Joi.number().required(),\n        }),\n    }\n}"]}