{"version":3,"sources":["../../src/routes/users.js"],"names":["router","route","get","index","post","userSchema","newUser","idSchema","getUser","put","replaceUser","patch","userOptionalSchema","updateUser","getUserCars","carSchema","newUserCar"],"mappings":";;;;;;AACA;;;;AAEA;;;;AAGA;;;;AAEA;;;;AARA;AAIA,IAAMA,SAAS,qCAAf;AACA;;AAHA;;AAKA;;;AAGAA,OAAOC,KAAP,CAAa,GAAb,EACKC,GADL,CACS,gBAAgBC,KADzB,EAEKC,IAFL,CAEU,iCAAa,uBAAQC,UAArB,CAFV,EAE4C,gBAAgBC,OAF5D;;AAIAN,OAAOC,KAAP,CAAa,UAAb,EACKC,GADL,CACS,mCAAe,uBAAQK,QAAvB,EAAiC,QAAjC,CADT,EACqD,gBAAgBC,OADrE,EAEKC,GAFL,CAES,CAAC,mCAAe,uBAAQF,QAAvB,EAAiC,QAAjC,CAAD,EAA6C,iCAAa,uBAAQF,UAArB,CAA7C,CAFT,EAGQ,gBAAgBK,WAHxB,EAIKC,KAJL,CAIW,CAAC,mCAAe,uBAAQJ,QAAvB,EAAiC,QAAjC,CAAD,EAA6C,iCAAa,uBAAQK,kBAArB,CAA7C,CAJX,EAKQ,gBAAgBC,UALxB;AAMI;;AAEJb,OAAOC,KAAP,CAAa,eAAb,EACKC,GADL,CACS,mCAAe,uBAAQK,QAAvB,EAAiC,QAAjC,CADT,EACqD,gBAAgBO,WADrE,EAEKV,IAFL,CAEU,iCAAa,uBAAQW,SAArB,CAFV,EAE2C,gBAAgBC,UAF3D;;kBAIehB,M;;AAEf;;AAEA;AACA;;AAEA","file":"users.js","sourcesContent":["/***** Routing for Users *****/\nimport express from 'express';\n// const router = express.Router();\nimport expressRouter from 'express-promise-router';\nconst router = expressRouter();\n//Controllers\nimport UsersController from '../controllers/users';\n//Helpers\nimport { validateParams, validateBody, schemas } from '../helpers/routerHelpers';\n\nrouter.route('/')\n    .get(UsersController.index)\n    .post(validateBody(schemas.userSchema), UsersController.newUser);\n\nrouter.route('/:userId')\n    .get(validateParams(schemas.idSchema, 'userId'), UsersController.getUser)\n    .put([validateParams(schemas.idSchema, 'userId'), validateBody(schemas.userSchema)],\n        UsersController.replaceUser)\n    .patch([validateParams(schemas.idSchema, 'userId'), validateBody(schemas.userOptionalSchema)],\n        UsersController.updateUser)\n    // .delete();\n\nrouter.route('/:userId/cars')\n    .get(validateParams(schemas.idSchema, 'userId'), UsersController.getUserCars)\n    .post(validateBody(schemas.carSchema), UsersController.newUserCar)\n\nexport default router;\n\n// router.get('/', (req,res,next) => {\n\n// });\n// router.post('/', (req,res,next) => {\n\n// });"]}