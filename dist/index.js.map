{"version":3,"sources":["../src/index.js"],"names":["connect","app","use","json","req","res","next","err","Error","status","error","get","message","console","log","port","process","env","PORT","listen"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;;;AAEA;;;AAJA;AANA;AAWA,mBAASA,OAAT,CAAiB,+DAAjB;;AAEA;AACA,IAAMC,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;;AAEA;AACAF,IAAIC,GAAJ,CAAQ,OAAR;AACAD,IAAIC,GAAJ,CAAQ,QAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,UAACE,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxB,QAAMC,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAZ;AACAD,QAAIE,MAAJ,GAAa,GAAb;AACAH,SAAKC,GAAL;AACH,CAJD;;AAMA;AACAN,IAAIC,GAAJ,CAAQ,UAACK,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7B,QAAMI,QAAQT,IAAIU,GAAJ,CAAQ,KAAR,MAAmB,aAAnB,GAAmCJ,GAAnC,GAAyC,EAAvD;AACA,QAAME,SAASF,IAAIE,MAAJ,IAAc,GAA7B;;AAEA;AACAJ,QAAII,MAAJ,CAAWA,MAAX,EAAmBN,IAAnB,CAAwB;AACpBO,eAAO;AACHE,qBAASF,MAAME;AADZ;AADa,KAAxB;;AAMA;AACAC,YAAQC,GAAR,CAAY,OAAZ,EAAqBP,GAArB;AACH,CAbD;;AAeA;AACA,IAAMQ,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEAjB,IAAIkB,MAAJ,CAAWJ,IAAX,EAAiB;AAAA,WAAMF,QAAQC,GAAR,0BAAmCC,IAAnC,CAAN;AAAA,CAAjB","file":"index.js","sourcesContent":["//Import packages/dependencies\nimport express from 'express';\nimport logger from 'morgan';\nimport mongoose from 'mongoose';\nimport bodyParser from 'body-parser';\n\n//Import Routes\nimport usersRoutes from './routes/users';\nimport carRoutes from './routes/cars';\n\n// mongoose.connect('mongodb://localhost/apiproject')\nmongoose.connect('mongodb://nehab:N3ha%40123@ds219879.mlab.com:19879/apiproject');\n\n//Register express app\nconst app = express();\n\n//Configure Middleware\napp.use(logger('dev'));\napp.use(bodyParser.json());\n\n//Configure Routes\napp.use('/cars', carRoutes);\napp.use('/users', usersRoutes);\n\n//Catch 404 error and forward to error handler function\napp.use((req, res, next) => {\n    const err = new Error('Access point not Found');\n    err.status = 404;\n    next(err);\n});\n\n//Error Handler\napp.use((err, req, res, next) => {\n    const error = app.get('env') === 'development' ? err : {}\n    const status = err.status || 500; \n\n    //Response client\n    res.status(status).json({\n        error: {\n            message: error.message\n        }\n    });\n\n    //Response ourselves\n    console.log('Error', err)\n});\n\n//Start server\nconst port = process.env.PORT || 5000;\n\napp.listen(port, () => console.log(`Server listening on ${port}`)) "]}