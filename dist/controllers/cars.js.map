{"version":3,"sources":["../../src/controllers/cars.js"],"names":["index","req","res","next","cars","find","status","json","newCar","seller","findById","value","body","car","save","push","getCar","carId","params","replaceCar","findByIdAndUpdate","success","updateCar","deleteCar","error","sellerId","remove","pull"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AACXA,WAAO,qBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC7B,YAAMC,OAAO,MAAM,cAAIC,IAAJ,CAAS,EAAT,CAAnB;AACAH,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBH,IAArB;AACH,KAJU;;AAMXI,YAAQ,sBAAOP,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC9B,YACIM,SAAS,MAAM,eAAKC,QAAL,CAAcT,IAAIU,KAAJ,CAAUC,IAAV,CAAeH,MAA7B,CADnB;AAAA,YAEID,SAAS,kBAAQP,IAAIU,KAAJ,CAAUC,IAAlB,CAFb;AAGA,eAAOJ,OAAOC,MAAd;;AAEA,YAAMI,MAAM,kBAAQL,MAAR,CAAZ;AACAK,YAAIJ,MAAJ,GAAaA,MAAb;;AAEA,cAAMD,OAAOM,IAAP,EAAN;AACAL,eAAOL,IAAP,CAAYW,IAAZ,CAAiBP,MAAjB;AACA,cAAMC,OAAOK,IAAP,EAAN;AACAZ,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,GAArB;AACH,KAnBU;;AAqBXG,YAAQ,sBAAOf,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAE1B,YAAEc,KAAF,GAAYhB,IAAIU,KAAJ,CAAUO,MAAtB,CAAED,KAAF;AAAA,YACAJ,GADA,GACM,MAAM,cAAIH,QAAJ,CAAaO,KAAb,CADZ;;AAEJf,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,GAArB;AACH,KA1BU;;AA4BXM,gBAAY,0BAAOlB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAE9B,YAAEc,KAAF,GAAYhB,IAAIU,KAAJ,CAAUO,MAAtB,CAAED,KAAF;AAAA,YACAT,MADA,GACSP,IAAIU,KAAJ,CAAUC,IADnB;;AAEJ,cAAM,cAAIQ,iBAAJ,CAAsBH,KAAtB,EAA6BT,MAA7B,CAAN;AACAN,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEc,SAAS,IAAX,EAArB;AACH,KAlCU;;AAoCXC,eAAW,yBAAOrB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAE7B,YAAEc,KAAF,GAAYhB,IAAIU,KAAJ,CAAUO,MAAtB,CAAED,KAAF;AAAA,YACAT,MADA,GACSP,IAAIU,KAAJ,CAAUC,IADnB;;AAEJ,cAAM,cAAIQ,iBAAJ,CAAsBH,KAAtB,EAA6BT,MAA7B,CAAN;AACAN,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEc,SAAS,IAAX,EAArB;AACH,KA1CU;;AA4CXE,eAAW,yBAAOtB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAE7B,YAAEc,KAAF,GAAYhB,IAAIU,KAAJ,CAAUO,MAAtB,CAAED,KAAF;AAAA,YACAJ,GADA,GACM,MAAM,cAAIH,QAAJ,CAAaO,KAAb,CADZ;;AAEJ,YAAG,CAACJ,GAAJ,EAAS;AACL,mBAAOX,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEiB,OAAO,oBAAT,EAArB,CAAP;AACH;AACD,YAAMC,WAAWZ,IAAIJ,MAArB;AAAA,YACIA,SAAS,MAAM,eAAKC,QAAL,CAAce,QAAd,CADnB;;AAGA,cAAMZ,IAAIa,MAAJ,EAAN;AACAjB,eAAOL,IAAP,CAAYuB,IAAZ,CAAiBd,GAAjB;AACA,cAAMJ,OAAOK,IAAP,EAAN;AACAZ,YAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEc,SAAS,IAAX,EAArB;AACH;AA1DU,C","file":"cars.js","sourcesContent":["import Car from '../models/car';\nimport User from '../models/user';\n\nexport default {\n    index: async (req, res, next) => {\n        const cars = await Car.find({});\n        res.status(200).json(cars);\n    },\n\n    newCar: async (req, res, next) => {\n        const\n            seller = await User.findById(req.value.body.seller),\n            newCar = new Car(req.value.body);\n        delete newCar.seller;\n\n        const car = new Car(newCar);\n        car.seller = seller;\n\n        await newCar.save();\n        seller.cars.push(newCar);\n        await seller.save();\n        res.status(201).json(car);\n    },\n\n    getCar: async (req, res, next) => {\n        const\n            { carId } = req.value.params,\n            car = await Car.findById(carId);\n        res.status(200).json(car);\n    },\n\n    replaceCar: async (req, res, next) => {\n        const\n            { carId } = req.value.params,\n            newCar = req.value.body;\n        await Car.findByIdAndUpdate(carId, newCar);\n        res.status(200).json({ success: true});\n    },\n\n    updateCar: async (req, res, next) => {\n        const\n            { carId } = req.value.params,\n            newCar = req.value.body;\n        await Car.findByIdAndUpdate(carId, newCar);\n        res.status(200).json({ success: true});\n    },\n\n    deleteCar: async (req, res, next) => {\n        const\n            { carId } = req.value.params,\n            car = await Car.findById(carId);\n        if(!car) {\n            return res.status(200).json({ error: 'Car doesn\\'t exist' });\n        };\n        const sellerId = car.seller,\n            seller = await User.findById(sellerId);\n        \n        await car.remove();\n        seller.cars.pull(car);\n        await seller.save();\n        res.status(200).json({ success: true });\n    },\n}"]}